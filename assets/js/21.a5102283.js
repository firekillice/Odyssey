(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{558:function(t,e,s){t.exports=s.p+"assets/img/20201116183232.ac82f008.png"},559:function(t,e,s){t.exports=s.p+"assets/img/sl-insert.71cd0c49.gif"},560:function(t,e,s){t.exports=s.p+"assets/img/sl-delete.63905170.gif"},561:function(t,e,s){t.exports=s.p+"assets/img/20201116183050.54a8acb8.png"},689:function(t,e,s){"use strict";s.r(e);var a=s(26),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"skip-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skip-list"}},[t._v("#")]),t._v(" skip list")]),t._v(" "),a("ul",[a("li",[t._v("全程跳跃链表，是一种类链表的数据结构(或者说是从链表演化过来的，后面可以看到最大层数为1的跳表就是普通的链表)。")]),t._v(" "),a("li",[t._v("它允许快速查询一个有序连续元素的数据链表。")]),t._v(" "),a("li",[t._v("增删查的时间复杂度都是O(logn)")]),t._v(" "),a("li",[t._v("一种空间换取时间的数据结构")]),t._v(" "),a("li",[t._v("对标的是平衡树")]),t._v(" "),a("li",[t._v('"电梯直达"')])]),t._v(" "),a("h2",{attrs:{id:"特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特征"}},[t._v("#")]),t._v(" 特征")]),t._v(" "),a("ul",[a("li",[t._v("多层分布")]),t._v(" "),a("li",[t._v("相邻层的上层是下层的子集")]),t._v(" "),a("li",[t._v("每层都有序")]),t._v(" "),a("li",[t._v("一般都有规定的最大的层数")]),t._v(" "),a("li",[t._v('哪个节点能够"突破底层"，全靠随机；随机值越小，则结构越尖（更上的点能够进入"上层"）')]),t._v(" "),a("li",[t._v("形象点看，如果层数越多，最终的结构越尖；层数越小，则越扁平")]),t._v(" "),a("li",[t._v("体验图 "),a("br"),a("img",{attrs:{src:s(558),alt:"experience"}})])]),t._v(" "),a("h2",{attrs:{id:"基础实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础实现"}},[t._v("#")]),t._v(" 基础实现")]),t._v(" "),a("ul",[a("li",[t._v("数据结构")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("typedef struct NODE {\n    T data;\n    struct Node *next[i];\n} node;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("随机一个层数")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var level = 0;\nwhile (Math.random() < 0.2 && level < MAX_LEVEL - 1) {\n    level ++;\n}\nreturn level;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ul",[a("li",[t._v("插入示例"),a("br"),t._v(" "),a("img",{attrs:{src:s(559),alt:"insert-ins"}})]),t._v(" "),a("li",[t._v("删除示例"),a("br"),t._v(" "),a("img",{attrs:{src:s(560),alt:"delete-ins"}})]),t._v(" "),a("li",[t._v("查找示例"),a("br"),t._v("\n如图为查找13的路线"),a("br"),t._v(" "),a("img",{attrs:{src:s(561),alt:"find-process"}})])]),t._v(" "),a("h2",{attrs:{id:"使用软件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用软件"}},[t._v("#")]),t._v(" 使用软件")]),t._v(" "),a("ul",[a("li",[t._v("redis")]),t._v(" "),a("li",[t._v("levelDB")])]),t._v(" "),a("h2",{attrs:{id:"souce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#souce"}},[t._v("#")]),t._v(" souce")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/fangjiaxiaobai/code_repo/tree/master/01_data_structures/skiplist/c/01_fangjiaxiaobai",target:"_blank",rel:"noopener noreferrer"}},[t._v("C 实现"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/fangjiaxiaobai/code_repo/tree/master/01_data_structures/skiplist/java/fangjiaxiaobai",target:"_blank",rel:"noopener noreferrer"}},[t._v("JAVA 实现"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" reference")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://redisbook.readthedocs.io/en/latest/internal-datastruct/skiplist.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("跳表在redis中的实现"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cl.cam.ac.uk/teaching/0506/Algorithms/skiplists.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("PAPER"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);