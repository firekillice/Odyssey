(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{549:function(a,s,t){a.exports=t.p+"assets/img/lock-style.55aca973.png"},679:function(a,s,t){"use strict";t.r(s);var r=t(26),e=Object(r.a)({},(function(){var a=this,s=a.$createElement,r=a._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"并发问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并发问题"}},[a._v("#")]),a._v(" 并发问题")]),a._v(" "),r("h2",{attrs:{id:"锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[a._v("#")]),a._v(" 锁")]),a._v(" "),r("h2",{attrs:{id:"乐观锁-悲观锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁-悲观锁"}},[a._v("#")]),a._v(" 乐观锁 & 悲观锁")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("* 乐观锁适用于读操作多的场景，这样可以提高程序的吞吐量。\n* 乐观锁不会刻意使用数据库本身的锁机制，而是依据数据本身来保证数据的正确性\n* 乐观锁实现方式：CAS(Compare And Swap)，即比较并交换； 版本号\n------------------------------------------------------------------------------------------------------\n* 悲观锁的实现，往往依靠数据库提供的锁机制\n* 悲观锁适用于写多的场景，保证数据的可靠性\n------------------------------------------------------------------------------------------------------\n* 不管是乐观锁，还是悲观锁，都是一种思想，不是实现技术\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br")])]),r("h3",{attrs:{id:"自旋锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自旋锁"}},[a._v("#")]),a._v(" 自旋锁")]),a._v(" "),r("ul",[r("li",[a._v("原地打转，不停的查看,「"),r("strong",[a._v("busy-waiting")]),a._v("」")])]),a._v(" "),r("h3",{attrs:{id:"互斥锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#互斥锁"}},[a._v("#")]),a._v(" 互斥锁")]),a._v(" "),r("ul",[r("li",[a._v("线程进入睡眠态，不像自旋锁一样不停的spin")])]),a._v(" "),r("h3",{attrs:{id:"锁之间的关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#锁之间的关系"}},[a._v("#")]),a._v(" 锁之间的关系")]),a._v(" "),r("p",[r("img",{attrs:{src:t(549),alt:"lock-relation"}})]),a._v(" "),r("h3",{attrs:{id:"锁的脑洞"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#锁的脑洞"}},[a._v("#")]),a._v(" 锁的脑洞")]),a._v(" "),r("ul",[r("li",[a._v("排队就是锁")])])])}),[],!1,null,null,null);s.default=e.exports}}]);