(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{655:function(t,r,e){"use strict";e.r(r);var s=e(26),a=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io"}},[t._v("#")]),t._v(" IO")]),t._v(" "),e("h2",{attrs:{id:"网络io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络io"}},[t._v("#")]),t._v(" 网络IO")]),t._v(" "),e("h4",{attrs:{id:"blocking-nonblocking"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blocking-nonblocking"}},[t._v("#")]),t._v(" blocking & nonblocking")]),t._v(" "),e("ul",[e("li",[t._v("阻塞指的是进程被挂起")]),t._v(" "),e("li",[t._v("阻塞指的是取数据进程本身")])]),t._v(" "),e("h4",{attrs:{id:"synchronous-asynchronous"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronous-asynchronous"}},[t._v("#")]),t._v(" Synchronous & Asynchronous")]),t._v(" "),e("ul",[e("li",[t._v("同步、异步指的是两边的信息的传递方式")]),t._v(" "),e("li",[t._v('所有阻塞或者非阻塞都是同步的方式，因为都是等待新的返回，只是方式不同，一个是睡着等，一个是"动"着等')]),t._v(" "),e("li",[t._v("同步异步指的是取数据与提供数据两者的关系")])]),t._v(" "),e("h4",{attrs:{id:"多路复用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多路复用"}},[t._v("#")]),t._v(" 多路复用")]),t._v(" "),e("ul",[e("li",[t._v("使用一种方式来处理多个socket")]),t._v(" "),e("li",[t._v("epoll高效的原因： 红黑树组织所有监控的fd、链表处理事件、用户和内核的数据共享（存在疑问？mmap）")])]),t._v(" "),e("h4",{attrs:{id:"lt-level-trigger-et-edge-trigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lt-level-trigger-et-edge-trigger"}},[t._v("#")]),t._v(" LT(Level Trigger) & ET (Edge Trigger)")]),t._v(" "),e("ul",[e("li",[t._v("LT: 有数据是高电平(可以想象为一个水桶)")]),t._v(" "),e("li",[t._v("ET: 有数据到来是高电平")]),t._v(" "),e("li",[t._v("高低电平的概念来自于时钟周期的触发，时钟从0->1的时候激活一次机器周期")]),t._v(" "),e("li",[t._v("可写事件：比如写缓冲已经满的时候")])]),t._v(" "),e("h4",{attrs:{id:"发展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发展"}},[t._v("#")]),t._v(" 发展")]),t._v(" "),e("ul",[e("li",[t._v("单个io的阻塞问题")]),t._v(" "),e("li",[t._v("select 有限个，使用数组")]),t._v(" "),e("li",[t._v("poll使用链表，个数无上限")]),t._v(" "),e("li",[t._v("epool即event poll，基于事件的方式，红黑树组织数据")]),t._v(" "),e("li",[t._v("核心是：需要一种机制来高效的管理大量的socket")])])])}),[],!1,null,null,null);r.default=a.exports}}]);