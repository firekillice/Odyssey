(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{369:function(s,n,a){s.exports=a.p+"assets/img/1_A2-5b7y8fICprzxlzEmp-A.c522339a.png"},370:function(s,n,a){s.exports=a.p+"assets/img/664334-37840aa80dbebd5f.abdc814e.jpg"},371:function(s,n,a){s.exports=a.p+"assets/img/664334-e150e0c5ba11dfc0.c6a33af0.jpg"},372:function(s,n,a){s.exports=a.p+"assets/img/v2-0cbf316c2275f712c440f0f43b3bc1be_720w.0cbf316c.jpg"},373:function(s,n,a){s.exports=a.p+"assets/img/81-1.824993c4.png"},620:function(s,n,a){"use strict";a.r(n);var e=a(26),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"编译-链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译-链接"}},[s._v("#")]),s._v(" 编译&链接")]),s._v(" "),e("ul",[e("li",[e("img",{attrs:{src:a(369),alt:"大概过程"}})]),s._v(" "),e("li",[s._v("例子代码")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('#define MAX_NUMBER 100\n\nint\nmain() {\nprintf("hello world");\nreturn 0;\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"预编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预编译"}},[s._v("#")]),s._v(" 预编译")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("处理过程")]),s._v(" "),e("blockquote",[e("p",[s._v("删除 #define 并展开宏定义")])]),s._v(" "),e("blockquote",[e("p",[s._v('处理所有的条件预编译指令，如 "#if"，"#ifdef"，"#endif"等')])]),s._v(" "),e("blockquote",[e("p",[s._v('插入头文件到 "#include" 处，可以递归方式进行处理')])]),s._v(" "),e("blockquote",[e("p",[s._v("删除所有的注释")])]),s._v(" "),e("blockquote",[e("p",[s._v("添加行号和文件名标识，以便编译时编译器产生调试用的行号信息")])]),s._v(" "),e("blockquote",[e("p",[s._v("保留所有 #pragma 编译指令（编译器需要用）")])])]),s._v(" "),e("li",[e("p",[s._v("查看")])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('> gcc -E main.c -o main.i\n> vim main.i \n\n# 1 "main.c"\n# 1 "<built-in>"\n# 1 "<command-line>"\n# 1 "/usr/include/stdc-predef.h" 1 3 4\n# 1 "<command-line>" 2\n# 1 "main.c"\n\n\nint\nmain() {\nprintf("hello world%d", 100);\nreturn 0;\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("h2",{attrs:{id:"编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[s._v("#")]),s._v(" 编译")]),s._v(" "),e("ul",[e("li",[s._v("编译过程就是将预处理后得到的预处理文件（如hello.i）进行词法分析、语法分析、语义分析、优化后，生成汇编代码文件。")]),s._v(" "),e("li",[s._v("查看")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('gcc -S main.c -o main.s\nvim main.s   \n .file   "main.c"\n    .section    .rodata\n.LC0:\n    .string "hello world%d"\n    .text\n    .globl  main\n    .type   main, @function\nmain:\n.LFB0:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    movl    $100, %esi\n    movl    $.LC0, %edi\n    movl    $0, %eax\n    call    printf\n    movl    $0, %eax\n    popq    %rbp\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n.LFE0:\n    .size   main, .-main\n    .ident  "GCC: (GNU) 4.8.5 20150623 (Red Hat 4.8.5-36)"\n    .section    .note.GNU-stack,"",@progbits\n~                                             \n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h2",{attrs:{id:"静态链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#静态链接"}},[s._v("#")]),s._v(" 静态链接")]),s._v(" "),e("ul",[e("li",[s._v("三个步骤：空间与地址分配，符号解析，重定位")])]),s._v(" "),e("h3",{attrs:{id:"空间与地址分配-目标文件合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#空间与地址分配-目标文件合并"}},[s._v("#")]),s._v(" 空间与地址分配&目标文件合并")]),s._v(" "),e("ul",[e("li",[s._v("两种合并方式，按序叠加，相似段叠加")]),s._v(" "),e("li",[e("img",{attrs:{src:a(370),alt:"按序叠加"}})]),s._v(" "),e("li",[e("img",{attrs:{src:a(371),alt:"相似叠加"}})]),s._v(" "),e("li",[s._v("目前都采用相似叠加策略")])]),s._v(" "),e("h3",{attrs:{id:"symbol-resolution-符号解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#symbol-resolution-符号解析"}},[s._v("#")]),s._v(" symbol resolution 符号解析")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("使用符号表实现")])]),s._v(" "),e("li",[e("p",[s._v("链接的时候.text部分不会对齐，直接合并")])]),s._v(" "),e("li",[e("p",[s._v("过程")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("(1)创建三个集合 E、U、D\nE：合并在一起的所有目标文件（还未重定位）\nU：没有解析的符号（定义符号和引用符号还没有被建立联系）\nD：定义符号的集合\n(2)对每一个输入文件来说，首先判断是不是库文件。如果不是库文件，就是目标文件f。就能把目标文件放入E中，根据f中未解析符号和定义符号判断后分别放入U、D中。比如说，f 中有一个未解析符号 k，如果 D 中存在对它的定义，那么就可以建立联系。如果没有就放入U中。如果是库文件，会试图把所有U中的符号与库文件中的符号匹配，匹配上了就从U放入D中。并把匹配上的模块放入E中。一直重复直到U D不再变化。库文件剩下的内容直接就不管了。如果往D中放入了一个已经存在的符号或者扫描完所有文件后U还是非空，则链接器会停止并报错。否则执行重定位。\n")])])])]),s._v(" "),e("li",[e("p",[s._v("示例")])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("> gcc -c main.c -o main.o\n> gcc  -o c_produre main.o simple_print.o\n> ld main.o simple_print.o -e main -o c_produre\n> ld main.o simple_print.o -e main -o c_produre\n--------------------------------------------------------------------\n#define MAX_NUMBER 100\n\nint\nmain() {\nprint(MAX_NUMBER);\nreturn 0;\n}\n--------------------------------------------------------------------\n#include <stdio.h>\nint print(int x) {\n}\n---------------------------------------------------------------------\nobjdump -t c_produre \n\nc_produre:     file format elf64-x86-64\n\nSYMBOL TABLE:\n00000000004000b0 l    d  .text  0000000000000000 .text\n00000000004000d8 l    d  .eh_frame      0000000000000000 .eh_frame\n0000000000000000 l    d  .comment       0000000000000000 .comment\n0000000000000000 l    df *ABS*  0000000000000000 main.c\n0000000000000000 l    df *ABS*  0000000000000000 simple_print.c\n00000000004000ca g     F .text  0000000000000009 print\n0000000000601000 g       .eh_frame      0000000000000000 __bss_start\n00000000004000b0 g     F .text  000000000000001a main\n0000000000601000 g       .eh_frame      0000000000000000 _edata\n0000000000601000 g       .eh_frame      0000000000000000 _end\n----------------------------------------------------------------------------\n> objdump -d c_produre \n\nc_produre:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n00000000004000b0 <main>:\n  4000b0:       55                      push   %rbp\n  4000b1:       48 89 e5                mov    %rsp,%rbp\n  4000b4:       bf 64 00 00 00          mov    $0x64,%edi\n  4000b9:       b8 00 00 00 00          mov    $0x0,%eax\n  4000be:       e8 07 00 00 00          callq  4000ca <print>\n  4000c3:       b8 00 00 00 00          mov    $0x0,%eax\n  4000c8:       5d                      pop    %rbp\n  4000c9:       c3                      retq   \n\n00000000004000ca <print>:\n  4000ca:       55                      push   %rbp\n  4000cb:       48 89 e5                mov    %rsp,%rbp\n  4000ce:       89 7d fc                mov    %edi,-0x4(%rbp)\n  4000d1:       5d                      pop    %rbp\n  4000d2:       c3                      retq   \n====================================================================================\nstrip c_produre\n> objdump -d c_produre \n\nc_produre:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n00000000004000b0 <.text>:\n  4000b0:       55                      push   %rbp\n  4000b1:       48 89 e5                mov    %rsp,%rbp\n  4000b4:       bf 64 00 00 00          mov    $0x64,%edi\n  4000b9:       b8 00 00 00 00          mov    $0x0,%eax\n  4000be:       e8 07 00 00 00          callq  0x4000ca\n  4000c3:       b8 00 00 00 00          mov    $0x0,%eax\n  4000c8:       5d                      pop    %rbp\n  4000c9:       c3                      retq   \n  4000ca:       55                      push   %rbp\n  4000cb:       48 89 e5                mov    %rsp,%rbp\n  4000ce:       89 7d fc                mov    %edi,-0x4(%rbp)\n  4000d1:       5d                      pop    %rbp\n  4000d2:       c3                      retq   \n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br")])]),e("h3",{attrs:{id:"relocation-重定位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#relocation-重定位"}},[s._v("#")]),s._v(" relocation 重定位")]),s._v(" "),e("ul",[e("li",[s._v("重定位表: 链接器通过重定位表才能知道哪些指令需要被调整，重定位表往往是一个或多个段。ELF必须包含重定位表来重新定位符号。比如代码段.text有符号需要重定位，则就会有一个的段保存了代码段重定位的信息，如果.data段中有重定位段保存了数据端的重定位表。可以使用objdump的的地方，就会有一个对应的.")]),s._v(" "),e("li",[s._v("在同一个目标文件出现和使用的变量和函数是不需要重定位的")]),s._v(" "),e("li",[s._v("示例")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#include <stdio.h>\nint g_i;\nextern int extern_var;\nint print(int x) {\n    extern_var = 40;\n}\n------------------------------------------------------------------------------------------------------------\n> objdump -r simple_print.o \n\nsimple_print.o:     file format elf64-x86-64\n\nRELOCATION RECORDS FOR [.text]:\nOFFSET           TYPE              VALUE \n0000000000000009 R_X86_64_PC32     extern_var-0x0000000000000008\n\n\nRELOCATION RECORDS FOR [.eh_frame]:\nOFFSET           TYPE              VALUE \n0000000000000020 R_X86_64_PC32     .text\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h3",{attrs:{id:"查看最终的地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看最终的地址"}},[s._v("#")]),s._v(" 查看最终的地址")]),s._v(" "),e("ul",[e("li",[s._v("通过objdump -h查看")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("objdump -h c_produre        \n\nc_produre:     file format elf64-x86-64\n\nSections:\nIdx Name          Size      VMA               LMA               File off  Algn\n  0 .text         0000002d  00000000004000e8  00000000004000e8  000000e8  2**0\n                  CONTENTS, ALLOC, LOAD, READONLY, CODE\n  1 .eh_frame     00000058  0000000000400118  0000000000400118  00000118  2**3\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n  2 .data         00000004  0000000000601000  0000000000601000  00001000  2**2\n                  CONTENTS, ALLOC, LOAD, DATA\n  3 .bss          00000004  0000000000601004  0000000000601004  00001004  2**2\n                  ALLOC\n  4 .comment      0000002d  0000000000000000  0000000000000000  00001004  2**0\n                  CONTENTS, READONLY\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("ul",[e("li",[s._v("通过VMA和LMA可以看到在空间上的最终布局地址")])]),s._v(" "),e("h2",{attrs:{id:"动态链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态链接"}},[s._v("#")]),s._v(" 动态链接")]),s._v(" "),e("ul",[e("li",[s._v("两大主角")]),s._v(" "),e("li",[s._v("存放函数地址的数据表, 全局偏移表 GOT(Global Offset Table)")]),s._v(" "),e("li",[s._v("额外代码段表, 程序链接表（PLT，Procedure Link Table）")]),s._v(" "),e("li",[s._v("示意图"),e("img",{attrs:{src:a(372),alt:"got|plt"}})])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#include <stdio.h>\n\nvoid print_banner()\n{\n    printf(\"Welcome to World of PLT and GOT\\n\");\n}\n\nint main(void)\n{\n    print_banner();\n\n    return 0;\n}\n-------------------------------------------------------------------------------------\n> objdump -d main\n...\nDisassembly of section .plt:\n\n00000000004003f0 <.plt>:\n  4003f0:       ff 35 12 0c 20 00       pushq  0x200c12(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>\n  4003f6:       ff 25 14 0c 20 00       jmpq   *0x200c14(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>\n  4003fc:       0f 1f 40 00             nopl   0x0(%rax)\n\n0000000000400400 <puts@plt>:\n  400400:       ff 25 12 0c 20 00       jmpq   *0x200c12(%rip)        # 601018 <puts@GLIBC_2.2.5>\n  400406:       68 00 00 00 00          pushq  $0x0\n  40040b:       e9 e0 ff ff ff          jmpq   4003f0 <.plt>\n\n0000000000400410 <__libc_start_main@plt>:\n  400410:       ff 25 0a 0c 20 00       jmpq   *0x200c0a(%rip)        # 601020 <__libc_start_main@GLIBC_2.2.5>\n  400416:       68 01 00 00 00          pushq  $0x1\n  40041b:       e9 d0 ff ff ff          jmpq   4003f0 <.plt>\n...\n000000000040051d <print_banner>:\n  40051d:       55                      push   %rbp\n  40051e:       48 89 e5                mov    %rsp,%rbp\n  400521:       bf e0 05 40 00          mov    $0x4005e0,%edi\n  400526:       e8 d5 fe ff ff          callq  400400 <puts@plt>\n  40052b:       5d                      pop    %rbp\n  40052c:       c3                      retq   \n\n000000000040052d <main>:\n  40052d:       55                      push   %rbp\n  40052e:       48 89 e5                mov    %rsp,%rbp\n  400531:       b8 00 00 00 00          mov    $0x0,%eax\n  400536:       e8 e2 ff ff ff          callq  40051d <print_banner>\n  40053b:       b8 00 00 00 00          mov    $0x0,%eax\n  400540:       5d                      pop    %rbp\n  400541:       c3                      retq   \n  400542:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)\n  400549:       00 00 00 \n  40054c:       0f 1f 40 00             nopl   0x0(%rax)\n  ...\n-------------------------------------------------------------------------------------\n  readelf  -x .plt main\n\nHex dump of section '.plt':\n  0x004003f0 ff35120c 2000ff25 140c2000 0f1f4000 .5.. ..%.. ...@.\n  0x00400400 ff25120c 20006800 000000e9 e0ffffff .%.. .h.........\n  0x00400410 ff250a0c 20006801 000000e9 d0ffffff .%.. .h.........\n\n从callq  400400 <puts@plt>可以看到引用了.plt代码中0x00400400地址的信息,而0x00400400对应了上面反汇编的内容；其实就是填充了一部分代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br")])]),e("ul",[e("li",[s._v("查看GOT表")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("> objdump -R main\n\nmain:     file format elf64-x86-64\n\nDYNAMIC RELOCATION RECORDS\nOFFSET           TYPE              VALUE \n0000000000600ff8 R_X86_64_GLOB_DAT  __gmon_start__\n0000000000601018 R_X86_64_JUMP_SLOT  puts@GLIBC_2.2.5\n0000000000601020 R_X86_64_JUMP_SLOT  __libc_start_main@GLIBC_2.2.5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("ul",[e("li",[s._v("动态连接器并不会把动态库函数在编译的时候就包含到 ELF 文件中,仅仅是在这个 ELF 被加载的时候,才会把那些动态函库数代码加载进来,之前系统只会在 ELF 文件中的 GOT 中保留一个调用地址。当 main() 函数开始，会请求 plt 中这个函数的对应 GOT 地址，如果第一次调用那么 GOT 会重定位到 plt，并向栈中压入一个偏移，程序的执行回到 _init() 函数，rtld得以调用就可以定位 printf 的符号地址，第二次运行程序再次调用这个函数时程序跳入 plt，对应的 GOT 入口点就是真实的函数入口地址。")]),s._v(" "),e("li",[s._v("所以GOT的值需要在运行时进行填充\n"),e("img",{attrs:{src:a(373),alt:"GOT值的填充"}}),s._v("，走了一个循环，妙")])]),s._v(" "),e("h2",{attrs:{id:"演员们"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#演员们"}},[s._v("#")]),s._v(" 演员们")]),s._v(" "),e("ul",[e("li",[s._v("COMPILER, ASSEMBLER, LINKER AND LOADER")]),s._v(" "),e("li",[s._v("链接脚本")])]),s._v(" "),e("h2",{attrs:{id:"理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理解"}},[s._v("#")]),s._v(" 理解")]),s._v(" "),e("ul",[e("li",[s._v("所有的符号在没有进入链接阶段之前，都只有相对地址（相对于段的地址），没有绝对地址；而链接后因为段有了绝对地址，相应的符号也有了绝对地址")]),s._v(" "),e("li",[s._v("链接的过程就像将预制板放到了指定的位置上，于是预制板获取了在房间的地址空间上的唯一地址；或者是将局部坐标系定位在另一个坐标系中；")]),s._v(" "),e("li",[s._v("因为目标文件的文件结构是基于段的，所以其实就是保存了很多的向量信息，可以进行重定位")]),s._v(" "),e("li",[s._v("需要将.txt .data .bss section整体重定位， 还需要将机器语言中涉及到的符号重新寻找地址")]),s._v(" "),e("li",[s._v("符号被strip后，所有的strip都变为了地址，符号信息的消息为逆向增加了很大的难度")]),s._v(" "),e("li",[s._v("链接最终的结果是："),e("strong",[s._v("所有的符号都在VMA上有固定的地址，甚至符号可以全部用地址替换")])]),s._v(" "),e("li",[s._v("符号表、重定位表是符号解析和重定位依赖的数据结构，相当于数据库索引")])])])}),[],!1,null,null,null);n.default=t.exports}}]);