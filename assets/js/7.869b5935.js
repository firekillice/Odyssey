(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{584:function(e,t,a){e.exports=a.p+"assets/img/desktop_0.1.3fbb328f.jpg"},585:function(e,t,a){e.exports=a.p+"assets/img/browser-rending.c234b039.png"},586:function(e,t,a){e.exports=a.p+"assets/img/webkit-framework.2790f581.png"},587:function(e,t,a){e.exports=a.p+"assets/img/20201123200655.a26bb113.png"},588:function(e,t,a){e.exports=a.p+"assets/img/v8-process.27fbf458.png"},589:function(e,t,a){e.exports=a.p+"assets/img/page-frame-document-layout.e32f07d8.png"},590:function(e,t,a){e.exports=a.p+"assets/img/dom-creation.60acafe4.png"},591:function(e,t,a){e.exports=a.p+"assets/img/dom-cssdom-build.d37b4ea8.png"},592:function(e,t,a){e.exports=a.p+"assets/img/definitive-guide-to-css-styling-order.611928c06a.611928c0.svg"},593:function(e,t,a){e.exports=a.p+"assets/img/syntax-css1.01a13a2e.png"},594:function(e,t,a){e.exports=a.p+"assets/img/stylesheet.9d818792.png"},595:function(e,t,a){e.exports=a.p+"assets/img/box-model.4b597e8a.png"},596:function(e,t,a){e.exports=a.p+"assets/img/chrome-development.2527e931.gif"},597:function(e,t,a){e.exports=a.p+"assets/img/js-thread.69ff031f.png"},598:function(e,t,a){e.exports=a.p+"assets/img/Cross-Process-Tabs-for-posting.56a2853e.png"},599:function(e,t,a){e.exports=a.p+"assets/img/Frame-Trees-2015-for-posting.55a132c3.png"},600:function(e,t,a){e.exports=a.p+"assets/img/css-selector.00932e70.png"},707:function(e,t,a){"use strict";a.r(t);var s=a(26),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"browser"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#browser"}},[e._v("#")]),e._v(" browser")]),e._v(" "),s("h2",{attrs:{id:"什么是浏览器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是浏览器"}},[e._v("#")]),e._v(" 什么是浏览器")]),e._v(" "),s("ul",[s("li",[e._v("访问WorldWideWeb的应用软件")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://www.evolutionoftheweb.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("浏览器技术家庭发展历史"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("世界第一个浏览器的界面"),s("br"),e._v(" "),s("img",{attrs:{src:a(584),alt:"第一个浏览器"}})])]),e._v(" "),s("h2",{attrs:{id:"渲染引擎-排版引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎-排版引擎"}},[e._v("#")]),e._v(" 渲染引擎(排版引擎)")]),e._v(" "),s("ul",[s("li")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("渲染引擎")]),e._v(" "),s("th",[e._v("维护公司")]),e._v(" "),s("th",[e._v("应用浏览器")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("KHTML")]),e._v(" "),s("td",[e._v("KDE")]),e._v(" "),s("td",[e._v("Konqueror")])]),e._v(" "),s("tr",[s("td",[e._v("WebKit")]),e._v(" "),s("td",[e._v("Apple,基于KHTML")]),e._v(" "),s("td",[e._v("Safari")])]),e._v(" "),s("tr",[s("td",[e._v("Blink")]),e._v(" "),s("td",[e._v("Google，基于WebKit")]),e._v(" "),s("td",[e._v("Chrome")])]),e._v(" "),s("tr",[s("td",[e._v("Gecko")]),e._v(" "),s("td",[e._v("Mozila")]),e._v(" "),s("td",[e._v("Firefox")])])])]),e._v(" "),s("ul",[s("li",[e._v("渲染过程"),s("br"),e._v(" "),s("img",{attrs:{src:a(585),alt:"rander-pipeline"}})])]),e._v(" "),s("h2",{attrs:{id:"webkit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webkit"}},[e._v("#")]),e._v(" WebKit")]),e._v(" "),s("ul",[s("li",[e._v("用来让网页浏览器绘制网页的排版引擎")]),e._v(" "),s("li",[e._v("C++实现")]),e._v(" "),s("li",[s("a",{attrs:{href:"https://trac.webkit.org/wiki/WebKitIDL",target:"_blank",rel:"noopener noreferrer"}},[e._v("JS绑定的IDL"),s("OutboundLink")],1),e._v("，"),s("a",{attrs:{href:"https://github.com/WebKit/webkit/blob/master/Source/WebCore/bindings/scripts/generate-bindings.pl",target:"_blank",rel:"noopener noreferrer"}},[e._v("绑定Perl脚本"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("架构示意图:"),s("br"),s("img",{attrs:{src:a(586),alt:"framework"}})])]),e._v(" "),s("h2",{attrs:{id:"javascritp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascritp"}},[e._v("#")]),e._v(" JavaScritp")]),e._v(" "),s("ul",[s("li",[e._v("假装此处写了JS的历史")])]),e._v(" "),s("h3",{attrs:{id:"js引擎-虚拟机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js引擎-虚拟机"}},[e._v("#")]),e._v(" JS引擎[虚拟机]")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("JS引擎")]),e._v(" "),s("th",[e._v("使用的浏览器")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("V8")]),e._v(" "),s("td",[e._v("Chrome")])]),e._v(" "),s("tr",[s("td",[e._v("JSCore")]),e._v(" "),s("td",[e._v("Safari")])]),e._v(" "),s("tr",[s("td",[e._v("SpiderMonkey")]),e._v(" "),s("td",[e._v("Mozilla Firefox")])]),e._v(" "),s("tr",[s("td",[e._v("Chakra")]),e._v(" "),s("td",[e._v("Internet Explorer  & Microsoft Edge")])]),e._v(" "),s("tr",[s("td",[e._v("KJS")]),e._v(" "),s("td",[e._v("Konqueror")])])])]),e._v(" "),s("h3",{attrs:{id:"v8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v8"}},[e._v("#")]),e._v(" V8")]),e._v(" "),s("ul",[s("li",[s("img",{attrs:{src:a(587),alt:"v8-origin"}})]),e._v(" "),s("li",[e._v("名字就来自于发送机的名字，可见该引擎的效率")]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/v8/v8",target:"_blank",rel:"noopener noreferrer"}},[e._v("源码地址"),s("OutboundLink")],1),e._v("，"),s("a",{attrs:{href:"https://v8.dev/docs",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("V8 实现了ECMAScript(JS的标准)和"),s("a",{attrs:{href:"https://webassembly.github.io/spec/core/intro/introduction.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebAssembly浏览器标准"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("虚拟机基于寄存器而不是基于栈")]),e._v(" "),s("li",[e._v("整体流程"),s("br"),e._v(" "),s("img",{attrs:{src:a(588),alt:"v8-explain"}})]),e._v(" "),s("li",[e._v("Parser: 负责将JavaScript源码转换为Abstract Syntax Tree (AST), "),s("a",{attrs:{href:"https://esprima.org/demo/parse.html#",target:"_blank",rel:"noopener noreferrer"}},[e._v("动态查看AST"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("Ignition, 解释器, 负责将AST转换为Bytecode，解释执行Bytecode, 同时收集TurboFan优化编译所需的信息，比如函数参数的类型")]),e._v(" "),s("li",[e._v("TurboFan 编译器, 利用Ignitio所收集的类型信息，将Bytecode转换为优化的汇编代码")]),e._v(" "),s("li",[e._v("Orinoco, GC, 垃圾回收模块，负责将程序不再需要的内存空间回收")]),e._v(" "),s("li",[e._v("Ignition 点火器, TurboFan涡轮增加，都是汽车系的名词")]),e._v(" "),s("li",[e._v("bytecode生成，从bytecode上可以看出，明显不是机器码")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function addInteger(a, b) {\n    return a + b;\n}\naddInteger(3,4);\n----------------------------------------------------------------------------------------------------------------------------------------\n    [generated bytecode for function: addInteger (0x1be7c1aa1261 <SharedFunctionInfo addInteger>)]\nParameter count 3\nRegister count 0\nFrame size 0\n   19 E> 0x1be7c1aa19fe @    0 : a7                StackCheck\n   29 S> 0x1be7c1aa19ff @    1 : 25 02             Ldar a1\n   38 E> 0x1be7c1aa1a01 @    3 : 34 03 00          Add a0, [0]\n   42 S> 0x1be7c1aa1a04 @    6 : ab                Return\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])]),s("h3",{attrs:{id:"jscore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jscore"}},[e._v("#")]),e._v(" JSCore")]),e._v(" "),s("ul",[s("li",[e._v("JavaScriptCore与V8有一些不同之处，其中最大的不同就是新增了字节码的中间表示，并加入了多层JIT编译器（如：简单JIT编译器、DFG JIT编译器、LLVM等）优化性能，不停的对本地代码进行优化。(在 V8 的 5.9 版本中，新增了一个 Ignition 字节码解释器，TurboFan 和 Ignition 结合起来共同完成JavaScript的编译，此后 V8 将与 JavaScriptCore 有大致相同的流程，Node 8.0中 V8 版本为 5.8)")])]),e._v(" "),s("h2",{attrs:{id:"技术点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术点"}},[e._v("#")]),e._v(" 技术点")]),e._v(" "),s("ul",[s("li",[e._v("几个概念的布局"),s("br"),e._v(" "),s("img",{attrs:{src:a(589),alt:"page-frame-document"}})])]),e._v(" "),s("h3",{attrs:{id:"canvas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#canvas"}},[e._v("#")]),e._v(" Canvas")]),e._v(" "),s("ul",[s("li",[e._v("通过JS绑定调用WebKit暴露的接口，这些接口是W3C的标准，定义在相应的IDL文件中"),s("a",{attrs:{href:"https://github.com/WebKit/webkit/tree/master/Source/WebCore/html/canvas",target:"_blank",rel:"noopener noreferrer"}},[e._v("IDL"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("WebKit使用Skia图形库进行最终的图形渲染")])]),e._v(" "),s("h3",{attrs:{id:"什么是dom-document-object-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是dom-document-object-model"}},[e._v("#")]),e._v(" 什么是DOM(Document Object Model)")]),e._v(" "),s("ul",[s("li",[e._v("DOM defines a platform-neutral model for events, aborting activities, and node trees."),s("a",{attrs:{href:"https://dom.spec.whatwg.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("standard"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("从名字可以看出，DOM是一种文档信息的结构化(面向对象)表述，也就是文档的内存数据")]),e._v(" "),s("li",[e._v("DOM将文档与JS脚本建立关联，同时也提供了被其他语言操作的API")]),e._v(" "),s("li",[e._v("一个web页面是一个文档，所以DOM是对同一份文档的另一种表现，是信息等价的")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('document.getElementsByTagName("P");\n//document就代表一个页面\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[e._v("开始的时候，JavaScript和DOM是交织在一起的，但它们最终演变成了两个独立的实体。JavaScript可以访问和操作存储在DOM中的内容，因此我们可以写成这个近似的等式：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("API (web 或 XML 页面) = DOM + JS (脚本语言)\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("DOM 被设计成与特定编程语言相独立，使文档的结构化表述可以通过单一，一致的API获得。")]),e._v(" "),s("ul",[s("li",[e._v("dom 构建 "),s("br"),e._v(" "),s("img",{attrs:{src:a(590),alt:"build-dom"}}),e._v(" "),s("img",{attrs:{src:a(591),alt:"build-detail"}})])]),e._v(" "),s("h3",{attrs:{id:"什么是css-cascading-style-sheet-层叠样式表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是css-cascading-style-sheet-层叠样式表"}},[e._v("#")]),e._v(" 什么是CSS(Cascading Style Sheet,层叠样式表)")]),e._v(" "),s("ul",[s("li",[e._v("a "),s("strong",[e._v("style sheet language")]),e._v(" used for describing the presentation of a document written in a markup language such as HTML.")]),e._v(" "),s("li",[e._v("style sheet language: a computer language that expresses the presentation of structured documents.")]),e._v(" "),s("li",[e._v("cascading: the specified priority scheme to determine which style rule applies if more than one rule matches a particular element. 可以看出，对于样式这个问题，匹配问题多么重要")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" 从低到高的顺序：\n    浏览器的设置\n    用户的设置\n    网页里普通的设置\n    网页里重要的设置\n    用户重要的设置\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' *             {}  /* a=0 b=0 c=0 d=0 -> specificity = 0,0,0,0 */\n li            {}  /* a=0 b=0 c=0 d=1 -> specificity = 0,0,0,1 */\n li:first-line {}  /* a=0 b=0 c=0 d=2 -> specificity = 0,0,0,2 */\n ul li         {}  /* a=0 b=0 c=0 d=2 -> specificity = 0,0,0,2 */\n ul ol+li      {}  /* a=0 b=0 c=0 d=3 -> specificity = 0,0,0,3 */\n h1 + *[rel=up]{}  /* a=0 b=0 c=1 d=1 -> specificity = 0,0,1,1 */\n ul ol li.red  {}  /* a=0 b=0 c=1 d=3 -> specificity = 0,0,1,3 */\n li.red.level  {}  /* a=0 b=0 c=2 d=1 -> specificity = 0,0,2,1 */\n #x34y         {}  /* a=0 b=1 c=0 d=0 -> specificity = 0,1,0,0 */\n style=""          /* a=1 b=0 c=0 d=0 -> specificity = 1,0,0,0 */\n<HEAD>\n<STYLE type="text/css">\n  #x97z { color: red }\n</STYLE>\n</HEAD>\n<BODY>\n<P ID=x97z style="color: green">\n</BODY>\n------------------------------------------------------------------------------\nP的最终颜色会是绿色\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br")])]),s("ul",[s("li",[e._v("diagram 表示"),s("br"),e._v(" "),s("img",{attrs:{src:a(592),alt:"style-priority"}})]),e._v(" "),s("li",[e._v("BNF表达，由于可使用巴斯克范式表达，所以WebKit中使用Flex/Bison(不要与Mongodb的bson混淆)")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ruleset\n  : selector [ ',' S* selector ]*\n    '{' S* declaration [ ';' S* declaration ]* '}' S*\n  ;\nselector\n  : simple_selector [ combinator selector | S+ [ combinator selector ] ]\n  ;\nsimple_selector\n  : element_name [ HASH | class | attrib | pseudo ]*\n  | [ HASH | class | attrib | pseudo ]+\n  ;\nclass\n  : '.' IDENT\n  ;\nelement_name\n  : IDENT | '*'\n  ;\nattrib\n  : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*\n    [ IDENT | STRING ] S* ] ']'\n  ;\npseudo\n  : ':' [ IDENT | FUNCTION S* [IDENT S*] ')' ]\n  ;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br")])]),s("ul",[s("li",[e._v("所有的 CSS 都是由 CSSStyleSheet 集合组成，CSSStyleSheet 是有多个 CSSRule 组成，每个 CSSRule 由 CSSStyleSelector 选择器和 CSSStyleDeclaration 声明组成。CSSStyleDeclaration 是 CSS 属性的键值集合。\n"),s("img",{attrs:{src:a(593),alt:"css-declaration"}}),e._v(" "),s("img",{attrs:{src:a(594),alt:"style-sheet-container"}})]),e._v(" "),s("li",[e._v("为了加速样式的匹配，渲染引擎会生成id map和tag map")]),e._v(" "),s("li",[e._v("style type: inline style, internal style(html文件内部), external style(css文件)")])]),e._v(" "),s("h3",{attrs:{id:"布局-layout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局-layout"}},[e._v("#")]),e._v(" 布局(Layout)")]),e._v(" "),s("ul",[s("li",[e._v("box model: HTML page is a collection of HTML elements (ex: P, DIV, H1). Each element is considered as a box. "),s("br"),e._v(" "),s("img",{attrs:{src:a(595),alt:"box-model"}})]),e._v(" "),s("li",[e._v("从内向外： content -> padding(尿不湿) -> border -> margin")])]),e._v(" "),s("h3",{attrs:{id:"jquery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jquery"}},[e._v("#")]),e._v(" JQuery")]),e._v(" "),s("ul",[s("li",[e._v("jQuery 最基本的中心思想就是以「选取一个DOM为开始」，接着对该DOM进行操作")])]),e._v(" "),s("h3",{attrs:{id:"svg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svg"}},[e._v("#")]),e._v(" SVG")]),e._v(" "),s("ul",[s("li",[e._v("可缩放矢量图形（Scalable Vector Graphics，SVG），是一种用于描述二维的矢量图形，基于 XML 的标记语言。作为一个基于文本的开放网络标准，SVG能够优雅而简洁地渲染不同大小的图形，并和CSS，DOM，JavaScript和SMIL等其他网络标准无缝衔接。")]),e._v(" "),s("li",[e._v("一种基于XML协议的图像描述文件，使用CSS描述样式")])]),e._v(" "),s("h3",{attrs:{id:"矢量图-位图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#矢量图-位图"}},[e._v("#")]),e._v(" 矢量图 位图")]),e._v(" "),s("ul",[s("li",[e._v("矢量图就是一种抽象图，而位图则是具象的")])]),e._v(" "),s("h3",{attrs:{id:"白屏时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#白屏时间"}},[e._v("#")]),e._v(" 白屏时间")]),e._v(" "),s("ul",[s("li",[e._v("白屏时间节点指的是从用户进入网站（输入url、刷新、跳转等方式）的时刻开始计算，一直到页面有内容展示出来的时间节点")])]),e._v(" "),s("h3",{attrs:{id:"首屏时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首屏时间"}},[e._v("#")]),e._v(" 首屏时间")]),e._v(" "),s("ul",[s("li",[e._v("从浏览器输入地址并回车后到首屏内容渲染完毕的时间；")])]),e._v(" "),s("h2",{attrs:{id:"chromium"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chromium"}},[e._v("#")]),e._v(" Chromium")]),e._v(" "),s("ul",[s("li",[e._v("谷歌的开源项目，"),s("a",{attrs:{href:"https://github.com/chromium/chromium",target:"_blank",rel:"noopener noreferrer"}},[e._v("地址"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://www.google.com/googlebooks/chrome/big_00.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("chrome漫画"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("使用的渲染引擎blink是从基于WebKit的分支，在chrome体现在"),s("a",{attrs:{href:"https://github.com/chromium/chromium/tree/master/third_party/blink",target:"_blank",rel:"noopener noreferrer"}},[e._v("BLINK"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"chrome://gpu/"}},[e._v("查看GPU加速的信息")])],1)]),e._v(" "),s("h3",{attrs:{id:"chrome的进程、线程机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chrome的进程、线程机制"}},[e._v("#")]),e._v(" Chrome的进程、线程机制")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Chrome使用多进程、多线程的模型")])]),e._v(" "),s("li",[s("p",[e._v("进程的信息可以在 "),s("strong",[e._v("菜单栏 >> 更多工具 >> 任务管理器")]),e._v(" 或者使用"),s("strong",[e._v("Shift+Esc")]),e._v("调出")])]),e._v(" "),s("li",[s("p",[s("img",{attrs:{src:a(596),alt:"发展轨迹"}})])]),e._v(" "),s("li",[s("p",[e._v("进程分类, 1 个浏览器（Browser）主进程、1 个 GPU 进程、1 个网络（NetWork）进程、多个渲染进程和多个插件进程。")]),e._v(" "),s("ul",[s("li",[e._v("浏览器进程")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("主要负责界面显示、用户交互、子进程管理，同时提供存储等功能。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("渲染进程")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页，排版引擎 Blink 和 JavaScript 引擎 V8 都是运行在该进程中，默认情况下，Chrome 会为每个 Tab 标签创建一个渲染进程(如果是同样的域名，则可能使用同一进程)。出于安全考虑，渲染进程都是运行在沙箱模式下。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("GPU 进程")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("其实，Chrome 刚开始发布的时候是没有 GPU 进程的。而 GPU 的使用初衷是为了实现 3D CSS 的效果，只是随后网页、Chrome 的 UI 界面都选择采用 GPU 来绘制，这使得 GPU 成为浏览器普遍的需求。最后，Chrome 在其多进程架构上也引入了 GPU 进程。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("网络进程")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("主要负责页面的网络资源加载，之前是作为一个模块运行在浏览器进程里面的，直至最近才独立出来，成为一个单独的进程。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("插件进程")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("主要是负责插件的运行，因插件易崩溃，所以需要通过插件进程来隔离，以保证插件进程崩溃不会对浏览器和页面造成影响。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("进程间通信：使用"),s("a",{attrs:{href:"https://chromium.googlesource.com/chromium/src/+/master/docs/mojo_and_services.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mojo"),s("OutboundLink")],1)])]),e._v(" "),s("li",[s("p",[e._v("线程分类：渲染线程、JS引擎线程、定时触发器线程、事件触发线程、异步http请求线程")]),e._v(" "),s("ul",[s("li",[e._v("渲染线程")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("负责渲染浏览器界面HTML元素,当界面需要重绘(Repaint)或由于某种操作引发回流(reflow)时,该线程就会执行。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("JS引擎线程, "),s("strong",[e._v("GUI渲染线程与JS引擎线程是互斥的，所以如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("JS引擎一直等待着任务队列中任务的到来，然后加以处理，一个Tab页（renderer进程）中无论什么时候都只有一个JS线程在运行JS程序\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[e._v("定时触发器线程")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("定时器setInterval与setTimeout所在线程\n浏览器定时计数器并不是由JavaScript引擎计数的 因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确, 因此通过单独线程来计时并触发定时是更为合理的方案。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[e._v("事件触发线程")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    用来控制事件轮询，JS引擎自己忙不过来，需要浏览器另开线程协助\n    当JS引擎执行代码块如鼠标点击、AJAX异步请求等，会将对应任务添加到事件触发线程中\n    当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理任务队列的队尾，等待JS引擎的处理\n    由于JS的单线程关系，所以这些待处理队列中的事件都得排队等待JS引擎处理（当JS引擎空闲时才会去执行）\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("ul",[s("li",[e._v("异步http请求线程，比如Ajax")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    在XMLHttpRequest在连接后是通过浏览器新开一个线程请求， 将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件放到 JavaScript引擎的处理队列中等待处理。\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("关于线程的解释: 其实JS引擎就是不断的处理任务队列，但是这种执行能力是宿主提供的；所以JS引擎其实是一种异步执行能力；而渲染线程则是同步执行能力；定时器是时间使用能力；事件线程是事件触发能力")])]),e._v(" "),s("li",[s("p",[e._v("线程之间的关系"),s("br"),e._v(" "),s("img",{attrs:{src:a(597),alt:"thread-relation"}}),e._v(" "),s("br")])]),e._v(" "),s("li",[s("p",[e._v("核心概念：事件循环(EventLoop), JavaScript 引擎本身并没有时间的概念，只是一个按需执行JavaScript 任意代码片段的环境。“事件”（JavaScript 代码执行）调度总是由包含它的环境进行。")])])]),e._v(" "),s("h3",{attrs:{id:"为什么需要安全沙箱-sandbox"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要安全沙箱-sandbox"}},[e._v("#")]),e._v(" 为什么需要安全沙箱(Sandbox)")]),e._v(" "),s("ul",[s("li",[e._v("JS的暴露，如果没有沙箱则OS则赤裸裸的暴露在恶意JS的操纵之下")]),e._v(" "),s("li",[e._v("避免来自网络的文件对系统资源的使用和占有")]),e._v(" "),s("li",[e._v("将渲染进程和OS隔离开的这道墙就是安全沙箱")])]),e._v(" "),s("h3",{attrs:{id:"为什么需要站点隔离-site-isolation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要站点隔离-site-isolation"}},[e._v("#")]),e._v(" 为什么需要站点隔离(Site Isolation)")]),e._v(" "),s("ul",[s("li",[e._v("iframe 标签允许将其他页面嵌入到当前的页面，那么如果被嵌入了恶意网站，则容易被控制与破坏")]),e._v(" "),s("li",[e._v("隔离技术：OOPIFs(Out-of-Process iframes)，简单讲，就是将同一个网站的页面在同一个进程中渲染")])]),e._v(" "),s("h4",{attrs:{id:"技术实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术实现"}},[e._v("#")]),e._v(" 技术实现"),s("br")]),e._v(" "),s("ul",[s("li",[e._v("技术上实现起来有点复杂，抄图过来"),s("br"),e._v(" "),s("img",{attrs:{src:a(598),alt:"简单的模式"}}),s("br"),e._v(" "),s("img",{attrs:{src:a(599),alt:"复杂模式"}})]),e._v(" "),s("li",[e._v('虚线代表进程的代理，以一个"tab"为单位，嵌套的iframe的渲染是通过进程代理找到渲染进程渲染完成后返回到标签进行显示')]),e._v(" "),s("li",[e._v('里面涉及到比较复杂的进程间通信和代理模式；而browser process则有种"调度器"，"管理器"，"路由器"的作用')])]),e._v(" "),s("h2",{attrs:{id:"理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解"}},[e._v("#")]),e._v(" 理解")]),e._v(" "),s("h3",{attrs:{id:"动态化能力"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态化能力"}},[e._v("#")]),e._v(" 动态化能力")]),e._v(" "),s("ul",[s("li",[e._v("JS")]),e._v(" "),s("li",[e._v("3d加速")]),e._v(" "),s("li",[e._v("Ajax")]),e._v(" "),s("li",[e._v("动画")]),e._v(" "),s("li",[e._v("Flash")])]),e._v(" "),s("h3",{attrs:{id:"分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分离"}},[e._v("#")]),e._v(" 分离")]),e._v(" "),s("ul",[s("li",[e._v("内容与样式(CSS)的分离")]),e._v(" "),s("li",[e._v("DOM与JS的分离")])]),e._v(" "),s("h3",{attrs:{id:"树树树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#树树树"}},[e._v("#")]),e._v(" 树树树")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("类型")]),e._v(" "),s("th",[e._v("树名")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("JS")]),e._v(" "),s("td",[e._v("AST")])]),e._v(" "),s("tr",[s("td",[e._v("HTML")]),e._v(" "),s("td",[e._v("DOM树")])]),e._v(" "),s("tr",[s("td",[e._v("CSS")]),e._v(" "),s("td",[e._v("CSSDOM树")])])])]),e._v(" "),s("h3",{attrs:{id:"选择子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择子"}},[e._v("#")]),e._v(" 选择子")]),e._v(" "),s("ul",[s("li",[e._v("JQuery")]),e._v(" "),s("li",[e._v("CSS\n"),s("img",{attrs:{src:a(600),alt:"selector"}})])]),e._v(" "),s("h3",{attrs:{id:"浏览器与untiy的区别与相似"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器与untiy的区别与相似"}},[e._v("#")]),e._v(" 浏览器与untiy的区别与相似")]),e._v(" "),s("ul",[s("li",[e._v("js vs lua")]),e._v(" "),s("li",[e._v("dom vs prefeb")])]),e._v(" "),s("h2",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[e._v("#")]),e._v(" reference")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/WebKit/webkit",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebKit Github"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://webkit.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebKit Web"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"http://webkithacks.github.io/webkit_presentations/architecture/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebKit Architecture"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://skia.org/index_zh",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skia Web"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/google/skia",target:"_blank",rel:"noopener noreferrer"}},[e._v("Skia GitHub"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/27628685",target:"_blank",rel:"noopener noreferrer"}},[e._v("V8 Instroduction"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://developer.51cto.com/art/202010/630315.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("V8 pricinple"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://webglfundamentals.org/webgl/lessons/zh_cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebGL文档"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://ming1016.github.io/2018/04/21/deeply-analyse-javascriptcore/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JsCore深度解读"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank/",target:"_blank",rel:"noopener noreferrer"}},[e._v("形象分析浏览器"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);